PK,SK,difficulty,index,name,prompt
Greedy Algorithm,Easy#1,Easy,1,Interval Scheduling,"""Given a set of intervals, select the maximum number of non-overlapping intervals. Each interval is represented by its start and end times."""
Greedy Algorithm,Easy#2,Easy,2,Coin Change,"""Given a set of coin denominations and a total amount, find the minimum number of coins needed to make up the amount. You can assume an infinite supply of each coin denomination."""
Greedy Algorithm,Easy#3,Easy,3,Fractional Knapsack,"""Given a set of items, each with a weight and a value, determine the maximum value of items you can carry in a knapsack of limited capacity. You can take fractions of items."""
Greedy Algorithm,Hard#1,Hard,1,Minimum Spanning Tree (Prim's Algorithm),"""Given a connected, undirected graph, find the minimum spanning tree using Prim's algorithm. The minimum spanning tree is a subset of edges that connects all the vertices with the minimum possible total edge weight."""
Greedy Algorithm,Hard#2,Hard,2,Dijkstra's Shortest Path,"""Given a weighted graph and a source node, find the shortest path from the source to all other nodes using Dijkstra's algorithm."""
Greedy Algorithm,Hard#3,Hard,3,Gas Station,"""There are N gas stations along a circular route. Each gas station has a certain amount of gas, and you need to travel around the route. Find the starting station where you can travel around the entire circuit without running out of gas."""
Greedy Algorithm,Medium#1,Medium,1,Activity Selection,"""Given a set of activities with their start and end times, select the maximum number of activities that can be performed by a single person, assuming no overlap between activities."""
Greedy Algorithm,Medium#2,Medium,2,Huffman Coding,"""Given a set of characters and their frequencies, construct a Huffman Tree and encode the characters with the optimal prefix code."""
Greedy Algorithm,Medium#3,Medium,3,Job Sequencing with Deadlines,"""Given a set of jobs, each with a deadline and profit, find the maximum profit schedule such that no two jobs overlap and each job is completed by its deadline."""
Sliding Window,Easy#1,Easy,1,Maximum Sum Subarray of Size K,"""Given an array of positive numbers and a positive number ‘k,’ find the maximum sum of any contiguous subarray of size ‘k’."""
Sliding Window,Easy#2,Easy,2,First Negative Number in Every Window of Size K,"""Given an array of integers and a number k, find the first negative integer in every window of size k. If a window does not contain a negative integer, output 0 for that window."""
Sliding Window,Easy#3,Easy,3,Average of All Contiguous Subarrays of Size K,"""Given an array, find the average of all contiguous subarrays of size ‘k’ in it."""
Sliding Window,Hard#1,Hard,1,Minimum Window Substring,"""Given two strings s and t, return the minimum window in s which contains all the characters of t. If there is no such window, return the empty string."""
Sliding Window,Hard#2,Hard,2,Sliding Window Maximum,You are given an array of integers and an integer k. Find the maximum value in each sliding window of size k.
Sliding Window,Hard#3,Hard,3,Smallest Substring of All Characters,"""Given a string and a set of characters, find the smallest substring of the string containing all the characters in the set."""
Sliding Window,Medium#1,Medium,1,Longest Substring with K Distinct Characters,"""Given a string, find the length of the longest substring in it with no more than K distinct characters."""
Sliding Window,Medium#2,Medium,2,Longest Substring Without Repeating Characters,"""Given a string, find the length of the longest substring which has all distinct characters."""
Sliding Window,Medium#3,Medium,3,Fruits into Baskets,You are given an array of characters where each character represents a fruit tree. You are allowed to pick fruits from only two types of trees. Find the length of the longest subarray with at most two different characters (types of fruits).
Divide and Conquer,Easy#1,Easy,1,Merge Sort,"""Implement the Merge Sort algorithm, which divides the array into two halves, recursively sorts each half, and then merges the sorted halves back together."""
Divide and Conquer,Easy#2,Easy,2,Quick Sort,"""Implement the Quick Sort algorithm, which selects a pivot element and partitions the array around the pivot, recursively sorting the two partitions."""
Divide and Conquer,Easy#3,Easy,3,Binary Search,"""Given a sorted array and a target element, implement the Binary Search algorithm to find the index of the target. Return -1 if the target is not found."""
Divide and Conquer,Hard#1,Hard,1,Kth Largest Element in an Array,"""Given an array of integers and an integer k, find the kth largest element in the array. Implement the algorithm using the Divide and Conquer approach."""
Divide and Conquer,Hard#2,Hard,2,Matrix Multiplication,Implement matrix multiplication using the Divide and Conquer approach. Multiply two matrices and return the resulting matrix.
Divide and Conquer,Hard#3,Hard,3,Strassen's Matrix Multiplication,"""Implement Strassen's Matrix Multiplication algorithm, which is a more efficient Divide and Conquer approach for multiplying two matrices, improving the time complexity."""
Divide and Conquer,Medium#1,Medium,1,Find Peak Element,"""Given an array of integers, find a peak element in the array. A peak element is an element that is greater than or equal to its neighbors. The array may have multiple peak elements, but return any one of them."""
Divide and Conquer,Medium#2,Medium,2,Majority Element,"""Given an array of size n, find the majority element. The majority element is the element that appears more than n/2 times. You can assume that the majority element always exists."""
Divide and Conquer,Medium#3,Medium,3,Closest Pair of Points,"""Given a set of points in a 2D plane, find the two closest points in the set. Implement this algorithm using the Divide and Conquer technique to achieve O(n log n) time complexity."""
Backtracking,Easy#1,Easy,1,Subsets,"""Given a set of distinct integers, return all possible subsets (the power set)."""
Backtracking,Easy#2,Easy,2,Permutations,"""Given a collection of distinct integers, return all possible permutations of the integers."""
Backtracking,Easy#3,Easy,3,Combination Sum,"""Given a set of candidate numbers and a target number, find all unique combinations that sum up to the target. Each number in the candidate set can be used unlimited times."""
Backtracking,Hard#1,Hard,1,Sudoku Solver,Write a program to solve a Sudoku puzzle by filling in the empty cells with digits from 1 to 9.
Backtracking,Hard#2,Hard,2,Palindrome Partitioning,"""Given a string, partition it such that every substring is a palindrome. Return all possible palindrome partitioning of the string."""
Backtracking,Hard#3,Hard,3,N-Queens II,Place N queens on an N×N chessboard such that no two queens threaten each other. Find the total number of distinct solutions.
Backtracking,Medium#1,Medium,1,N-Queens,Place N queens on an N×N chessboard so that no two queens threaten each other. Return all distinct solutions.
Backtracking,Medium#2,Medium,2,Word Search,"""Given a 2D board and a word, find if the word exists in the grid. You can move horizontally or vertically from a given cell."""
Backtracking,Medium#3,Medium,3,Combination Sum II,"""Given a collection of candidate numbers and a target number, return all unique combinations that sum up to the target. Each number in the candidate set can be used only once."""
Binary Search,Easy#1,Easy,1,Binary Search,"""Given a sorted array of integers and a target value, implement the binary search algorithm to find the target. Return the index of the target if found, otherwise return -1."""
Binary Search,Easy#2,Easy,2,Search Insert Position,"""Given a sorted array and a target value, return the index if the target is found. If not, return the index where the target should be inserted to maintain the sorted order."""
Binary Search,Hard#1,Hard,1,Median of Two Sorted Arrays,"""Given two sorted arrays of integers, find the median of the two arrays. The solution should run in O(log(min(n, m))) time, where n and m are the lengths of the arrays."""
Binary Search,Hard#2,Hard,2,Aggressive Cows,"""You have a number of cows and a list of stalls, each with a specific position. The goal is to place the cows in the stalls such that the minimum distance between any two cows is as large as possible. Use binary search to find the maximum minimum distance."""
Binary Search,Hard#3,Hard,3,Capacity to Ship Packages Within D Days,"""Given an array of weights and a number D, find the minimum weight capacity of the ship such that all packages can be shipped within D days. Use binary search to find the optimal capacity."""
Binary Search,Medium#1,Medium,1,Find Peak Element,"""Given an array of integers, find a peak element in the array. A peak element is an element that is greater than or equal to its neighbors. Use binary search to find it in O(log n) time."""
Binary Search,Medium#2,Medium,2,Square Root of a Number,"""Given a non-negative integer x, compute and return the square root of x. You may not use the built-in sqrt function. Use binary search to find the result."""
Binary Search,Medium#3,Medium,3,Find Minimum in Rotated Sorted Array,"""Given a rotated sorted array of distinct integers, find the minimum element in the array using binary search."""
Binary Search,Medium#4,Medium,4,Kth Smallest Element in a Sorted Matrix,"""Given an n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix. Implement this using binary search."""
Two Pointers,Easy#1,Easy,1,Pair with Target Sum,"""Given a sorted array of integers and a target sum, find two numbers in the array that add up to the target sum. Return their indices."""
Two Pointers,Easy#2,Easy,2,Reverse a String,"""Given a string, reverse it using the two-pointer technique (one pointer at the start and one at the end)."""
Two Pointers,Easy#3,Easy,3,Remove Duplicates from Sorted Array,"""Given a sorted array, remove the duplicates in-place such that each element appears only once. Return the new length of the array."""
Two Pointers,Hard#1,Hard,1,Trapping Rain Water,"""Given an array representing the height of bars in a histogram, calculate how much water can be trapped between the bars after raining."""
Two Pointers,Hard#2,Hard,2,Minimizing Permutations,"""Given a permutation of numbers 1 to n, find the minimum number of adjacent swaps required to sort the array."""
Two Pointers,Hard#3,Hard,3,Palindrome Linked List,"""Given a singly linked list, determine if it is a palindrome."""
Two Pointers,Medium#1,Medium,1,Container With Most Water,"""Given an array of heights, where each element represents the height of a vertical line, find the maximum area of water that can be contained between two lines."""
Two Pointers,Medium#2,Medium,2,3Sum,"""Given an array of integers, find all unique triplets in the array which give the sum of zero."""
Two Pointers,Medium#3,Medium,3,Two Sum II - Input Array Is Sorted,"""Given a sorted array and a target sum, find two numbers in the array that add up to the target sum and return their indices."""
